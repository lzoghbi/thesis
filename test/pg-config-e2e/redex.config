{
"redex" : {
  "passes" : []
},
"SingleImplPass": {
  "white_list" : [],
  "package_white_list" : [],
  "black_list" : [
    "Lcom/facebook/content/BroadcastReceiverLike;",
    "Lcom/facebook/acra/LogBridge;",
    "Lcom/facebook/prefs/shared/FbSharedPreferences;",
    "Lcom/facebook/resources/HasOverridingResources;",
    "Lcom/facebook/common/executors/ProvidesName;",
    "Lcom/facebook/base/broadcast/FbBroadcastManager;"
  ],
  "package_black_list" : [
    "Lcom/fasterxml/jackson/",
    "Lcom/google/gson/",
    "Lcom/google/android/",
    "Landroid/support/",
    "Lcom/facebook/proxygen/"
  ]
},
"SimpleInlinePass": {
  "no_inline_annos" : [
    "Lcom/fasterxml/jackson/databind/annotation/JsonDeserialize;"
  ]
},
"ShortenSrcStringsPass" : {
  "filename_mappings" : "/tmp/filename_mappings.txt"
},
"RenameClassesPass" : {
  "class_rename" : "/tmp/redex-class-rename-map.txt",
  "_comment_pre" : "Add only very targeted patterns here, where you can ensure you won't have false positives. This usually means a pattern generated by a code generator.",
  "pre_filter_whitelist" : [
    "GraphQLModel",
    "GraphQLInterfaces",
    "QueryString;",
    "GraphQL;",
    "_JsonHelper",
    "QueryModels",
    "ModelDeserializer;",
    "ModelSerializer;",
    "$Deserializer;",
    "$Serializer;",
    "PartDefinition"
  ],
  "_comment_post" : "Add wider patterns here. They will be applied after the broad can_rename filter has run.",
  "post_filter_whitelist"  : [
   "_"
  ]
},
"FinalInlinePass" : {
  "remove_class_members" : [
    "Lcom/facebook/R$"
  ]
},
"AnnoKillPass" : {
 "remove_all_build_annos": "1",
 "remove_all_system_annos": "0",
 "remove_annos": [
   "Ldalvik/annotation/Signature;",
   "Ljavax/annotation/Nullable;",
   "Lcom/facebook/dracula/api/FieldOffset;",
   "Lcom/facebook/flatbuffers/ModelWithFlatBufferFormatHash;",
   "Lcom/facebook/flatbuffers/FragmentModelWithoutBridge;",
   "Lcom/facebook/common/json/AutoGenJsonDeserializer;",
   "Lcom/facebook/common/json/AutoGenJsonSerializer;",
   "Ljavax/annotation/Nonnull;",
   "Ljava/lang/annotation/Retention;"
 ],
 "blacklist": [
   "Lcom/fasterxml/jackson/core/type/TypeReference;",
   "Lcom/google/inject/TypeLiteral;"
 ],
 "blacklist_classes_containing_class_annotations": [
   "Lcom/fasterxml/jackson/databind/annotation/JsonDeserialize;",
   "Lcom/fasterxml/jackson/annotation/JsonIgnoreProperties;",
   "Lcom/fasterxml/jackson/annotation/JsonIgnore;",
   "Lcom/facebook/common/json/AutoGenJsonDeserializer;",
   "Lcom/facebook/common/json/AutoGenJsonSerializer;"
 ]
},
"InterDexPass" : {
  "static_prune" : "0",
  "emit_canaries" : "1"
},
"keep_packages": [
  "Lcom/fasterxml/jackson/",
  "Lgenerated_rootmodule/",
  "Lsecondary/",
  "Lcom/google/dexmaker/mockito/",
  "Lcom/facebook/testing",
  "Lcom/facebook/react/",
  "Linjector_autorequire_modules/"
],
"keep_annotations": [
  "Lcom/facebook/proguard/annotations/DoNotStrip;",
  "Lcom/facebook/react/uimanager/UIProp;",
  "Lcom/facebook/common/internal/DoNotStrip;",
  "Lcom/facebook/react/uimanager/annotations/ReactProp;",
  "Lcom/google/common/annotations/VisibleForTesting;"
],
"keep_class_members" : [
  "I Lcom/facebook/R$id;.feed_unit_cache_id",
  "I Lcom/facebook/R$id;.layout_container_main"
],
"no_optimizations_annotations": [
  "Lcom/facebook/soloader/DoNotOptimize;",
  "Lcom/facebook/annotations/DoNotOptimize;"
],
"emit_locator_strings": true,
"proguard_map": "",
"proguard_map_output": "redex_pg_mapping.txt",
"stats_output": "/tmp/stats.txt",
"method_mapping": "/tmp/method_mapping.txt",
"coldstart_classes": "apps/fb4a/secondary_dex_head.list",
"coldstart_methods": "apps/fb4a/coldstart_methods.list",
"method_move_map" : "/tmp/redex-moved-methods-map.txt"
}
